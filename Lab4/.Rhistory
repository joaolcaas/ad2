knitr::opts_chunk$set(echo = TRUE)
library(readr)
install.packages("readr")
library(readr)
library(leaps)
install.packages("leaps")
library(readr)
library(leaps)
library(ggplot2)
library(plotly)
library(knitr)
library(caret)
install.packages("caret")
library(readr)
library(leaps)
library(ggplot2)
library(plotly)
library(knitr)
library(caret)
df <- read.csv("/home/joaolaf/Área de Trabalho/eleicoes2014.csv",fileEncoding = "latin1")
colnames(df)[13] <- "recursos_pessoas_fisicas"
media_partidos <- mean(df$recursos_de_partidos, na.rm = TRUE)
df$recursos_de_partidos[is.na(df$recursos_de_partidos)] <- media_partidos
media_comites <- mean(df$recursos_de_outros_candidatos.comites, na.rm = TRUE)
df$recursos_de_outros_candidatos.comites[is.na(df$recursos_de_outros_candidatos.comites)] <- media_comites
media_proprios <- mean(df$recursos_proprios, na.rm = TRUE)
df$recursos_proprios[is.na(df$recursos_proprios)] <- media_proprios
media_fisicas <- mean(df$recursos_pessoas_fisicas, na.rm = TRUE)
df$recursos_pessoas_fisicas[is.na(df$recursos_pessoas_fisicas)] <- media_fisicas
media_juridicas <- mean(df$recursos_de_pessoas_juridicas, na.rm = TRUE)
df$recursos_de_pessoas_juridicas[is.na(df$recursos_de_pessoas_juridicas)] <- media_juridicas
fitControl <- trainControl(method = "repeatedcv", repeats = 5, number = 5)
lambda.grid <- expand.grid(lambda = seq(0, 2, by=0.05))
ridge <- train(votos ~ ., data = df %>% select(-cargo),
method='ridge',
tuneGrid = lambda.grid,
trControl = fitControl,
metric='RMSE',
preProcess=c('scale', 'center','nzv')) # nzv para resolver o 0 variance
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(leaps)
library(ggplot2)
library(plotly)
library(knitr)
library(caret)
library(elasticnet)
df <- read.csv("/home/joaolaf/Área de Trabalho/eleicoes2014.csv",fileEncoding = "latin1")
colnames(df)[13] <- "recursos_pessoas_fisicas"
media_partidos <- mean(df$recursos_de_partidos, na.rm = TRUE)
df$recursos_de_partidos[is.na(df$recursos_de_partidos)] <- media_partidos
media_comites <- mean(df$recursos_de_outros_candidatos.comites, na.rm = TRUE)
df$recursos_de_outros_candidatos.comites[is.na(df$recursos_de_outros_candidatos.comites)] <- media_comites
media_proprios <- mean(df$recursos_proprios, na.rm = TRUE)
df$recursos_proprios[is.na(df$recursos_proprios)] <- media_proprios
media_fisicas <- mean(df$recursos_pessoas_fisicas, na.rm = TRUE)
df$recursos_pessoas_fisicas[is.na(df$recursos_pessoas_fisicas)] <- media_fisicas
media_juridicas <- mean(df$recursos_de_pessoas_juridicas, na.rm = TRUE)
df$recursos_de_pessoas_juridicas[is.na(df$recursos_de_pessoas_juridicas)] <- media_juridicas
fitControl <- trainControl(method = "repeatedcv", repeats = 5, number = 5)
lambda.grid <- expand.grid(lambda = seq(0, 2, by=0.05))
ridge <- train(votos ~ ., data = df %>% select(-cargo),
method='ridge',
tuneGrid = lambda.grid,
trControl = fitControl,
metric='RMSE',
preProcess=c('scale', 'center','nzv')) # nzv para resolver o 0 variance
fitControl <- trainControl(method = "repeatedcv", repeats = 5, number = 5)
lambda.grid <- expand.grid(lambda = seq(0, 2, by=0.05))
ridge <- train(votos ~ ., data = df %>% select(-cargo),
method='ridge',
tuneGrid = lambda.grid,
trControl = fitControl,
metric='RMSE',
preProcess=c('scale', 'center','nzv')) # nzv para resolver o 0 variance
fitControl <- trainControl(method = "repeatedcv", repeats = 5, number = 5)
lambda.grid <- expand.grid(lambda = seq(0, 2, by=0.05))
ridge <- train(votos ~ ., data = df %>% select(-cargo),
method='ridge',
tuneGrid = lambda.grid,
trControl = fitControl,
metric='RMSE',
preProcess=c('scale', 'center','nzv')) # nzv para resolver o 0 variance
fitControl <- trainControl(method = "repeatedcv", repeats = 5, number = 5)
fitControl <- trainControl(method = "repeatedcv", repeats = 5, number = 5)
lambda.grid <- expand.grid(lambda = seq(0, 2, by=0.5))
ridge <- train(votos ~ ., data = df %>% select(-cargo),
method='ridge',
tuneGrid = lambda.grid,
trControl = fitControl,
metric='RMSE',
preProcess=c('scale', 'center','nzv')) # nzv para resolver o 0 variance
