plot(ridge,xlab="Lambda",ylab = "RMSE")
varImp(lasso)
varImp(ridge)
lasso_prediction_no_cv <- predict(lasso,df %>% select(-setor_economico_receita) %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_despesa))
lasso_no_cv <- data.frame(pred = lasso_prediction_no_cv, obs = df$votos)
lasso_pred_no_cv <- train(votos ~ ., data = df %>% select(-setor_economico_receita) %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_despesa),
method='lasso',
metric='RMSE',
tuneLength = 100,
preProcess=c('scale', 'center'))
lasso_pred_no_cv <- train(votos ~ ., data = df %>% select(-setor_economico_receita) %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_despesa),
method='lasso',
metric='RMSE',
tuneLength = 100,
na.action = na.exclude,
preProcess=c('scale', 'center'))
lasso_pred_no_cv <- train(votos ~ ., data = df %>% select(-setor_economico_receita) %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_despesa),
method='lasso',
metric='RMSE',
tuneLength = 100,
preProcess=c('scale', 'center'))
lasso_pred_no_cv <- train(votos ~ ., data = df %>% select(-setor_economico_receita) %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_despesa),
method='lasso',
metric='RMSE',
tuneLength = 100,
preProcess=c('scale', 'center',"nzv"))
lasso_prediction_no_cv <- predict(lasso_pred_no_cv,df %>% select(-setor_economico_receita) %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_despesa))
lasso_pred_no_cv <- train(df$votos ~ ., data = df %>% select(-setor_economico_receita) %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_despesa),
method='lasso',
metric='RMSE',
tuneLength = 100,
preProcess=c('scale', 'center',"nzv"))
lasso_pred_no_cv <- train(df$votos ~ ., data = df %>% select(-setor_economico_receita) %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_despesa),
method='lasso',
metric='RMSE',
tuneLength = 100,
na.action = na.exclude,
preProcess=c('scale', 'center',"nzv"))
ridge <- train(votos ~ ., data = df %>% select(-cargo) %>% select(-nome),
method='ridge',
tuneGrid = lambda.grid,
metric='RMSE',
preProcess=c('scale', 'center','nzv'))
ridge <- train(votos ~ ., data = df %>% select(-cargo) %>% select(-nome),
method='ridge',
tuneGrid = lambda.grid,
trControl = fitControl,
metric='RMSE',
preProcess=c('scale', 'center','nzv'))
ridge_no_cv <- train(votos ~ ., data = df %>% select(-cargo) %>% select(-nome),
method='ridge',
tuneGrid = lambda.grid,
metric='RMSE',
preProcess=c('scale', 'center','nzv'))
fitControl <- trainControl(method = "repeatedcv", repeats = 5, number = 5)
lambda.grid <- expand.grid(lambda = seq(0, 2, by=0.1))
ridge <- train(votos ~ ., data = df %>% select(-cargo) %>% select(-nome),
method='ridge',
tuneGrid = lambda.grid,
trControl = fitControl,
metric='RMSE',
preProcess=c('scale', 'center','nzv')) # nzv para resolver o 0 variance
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(leaps)
library(ggplot2)
library(plotly)
library(knitr)
library(caret)
library(elasticnet)
library(lars)
df <- read.csv("C:/Users/João Lucas/Desktop/eleicoes2014.csv",fileEncoding = "latin1")
colnames(df)[13] <- "recursos_pessoas_fisicas"
media_partidos <- mean(df$recursos_de_partidos, na.rm = TRUE)
df$recursos_de_partidos[is.na(df$recursos_de_partidos)] <- media_partidos
media_comites <- mean(df$recursos_de_outros_candidatos.comites, na.rm = TRUE)
df$recursos_de_outros_candidatos.comites[is.na(df$recursos_de_outros_candidatos.comites)] <- media_comites
media_proprios <- mean(df$recursos_proprios, na.rm = TRUE)
df$recursos_proprios[is.na(df$recursos_proprios)] <- media_proprios
media_fisicas <- mean(df$recursos_pessoas_fisicas, na.rm = TRUE)
df$recursos_pessoas_fisicas[is.na(df$recursos_pessoas_fisicas)] <- media_fisicas
media_juridicas <- mean(df$recursos_de_pessoas_juridicas, na.rm = TRUE)
df$recursos_de_pessoas_juridicas[is.na(df$recursos_de_pessoas_juridicas)] <- media_juridicas
fitControl <- trainControl(method = "repeatedcv", repeats = 5, number = 5)
lambda.grid <- expand.grid(lambda = seq(0, 2, by=0.1))
ridge <- train(votos ~ ., data = df %>% select(-cargo) %>% select(-nome),
method='ridge',
tuneGrid = lambda.grid,
trControl = fitControl,
metric='RMSE',
preProcess=c('scale', 'center','nzv')) # nzv para resolver o 0 variance
ridge
ridge_prediction <- predict(ridge,df %>% select(-cargo) %>% select(-nome) %>% select(-votos))
ridge.df <- data.frame(pred = ridge_prediction, obs = df$votos)
ridge_round <- round(defaultSummary(ridge.df),digits = 3)
ridge_round
lasso <- train(votos ~ ., data = df %>% select(-setor_economico_receita) %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_despesa),
method='lasso',
trControl = fitControl,
metric='RMSE',
tuneLength = 100,
preProcess=c('scale', 'center'))
lasso
lasso_prediction <- predict(lasso,df %>% select(-setor_economico_receita) %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_despesa))
lasso.df <- data.frame(pred = lasso_prediction, obs = df$votos)
lasso_round <- round(defaultSummary(lasso.df),digits = 3)
lasso_round
trctrl <- trainControl(method = "repeatedcv", number = 10, repeats = 3)
knn <- train(votos ~ ., data = df %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_receita) %>% select(-setor_economico_despesa),
method = "knn",
trControl=trctrl,
metric='RMSE',
na.action = na.exclude,
preProcess = c("center", "scale","nzv"),
tuneLength = 15)
knn
knn_prediction <- predict(knn,df %>% select(-setor_economico_receita) %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_despesa))
knn.df <- data.frame(pred = knn_prediction, obs = df$votos)
knn_round <- round(defaultSummary(knn.df),digits = 3)
knn_round
plot(knn,ylab ="RMSE")
plot(lasso,xlab="Lambda",ylab = "RMSE")
plot(ridge,xlab="Lambda",ylab = "RMSE")
varImp(lasso)
varImp(ridge)
ridge_no_cv <- train(votos ~ ., data = df %>% select(-cargo) %>% select(-nome),
method='ridge',
tuneGrid = lambda.grid,
metric='RMSE',
preProcess=c('scale', 'center','nzv'))
ridge_no_cv
ridge_pred_no_cv <- predict(ridge_no_cv,df %>% select(-cargo) %>% select(-nome) %>% select(-votos))
ridge.data_no_cv <- data.frame(pred = ridge_pred_no_cv, obs = df$votos)
ridge_show_no_cv <- round(defaultSummary(ridge_data_no_cv))
ridge_pred_no_cv <- predict(ridge_no_cv,df %>% select(-cargo) %>% select(-nome) %>% select(-votos))
ridge.data_no_cv <- data.frame(pred = ridge_pred_no_cv, obs = df$votos)
ridge_show_no_cv <- round(defaultSummary(ridge.data_no_cv))
ridge_show_no_cv
ridge_pred_no_cv <- predict(ridge_no_cv,df %>% select(-cargo) %>% select(-nome) %>% select(-votos))
ridge.data_no_cv <- data.frame(pred = ridge_pred_no_cv, obs = df$votos)
ridge_show_no_cv <- round(defaultSummary(ridge.data_no_cv),digits = 3)
ridge_show_no_cv
ridge_pred_no_cv <- predict(ridge_no_cv,df %>% select(-cargo) %>% select(-nome) %>% select(-votos))
ridge.data_no_cv <- data.frame(pred = ridge_pred_no_cv, obs = df$votos)
ridge_show_no_cv <- round(defaultSummary(ridge.data_no_cv),digits = 4)
ridge_show_no_cv
kaggle.model <- train(votos ~ poly(total_receita,2) + poly(total_despesa,2) + poly(quantidade_despesa,2) + poly(recursos_de_pessoas_juridicas,2) + poly(recursos_de_partidos,2),  data = df %>% select(-setor_economico_receita) %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_despesa),
method='lasso',
trControl = fitControl,
metric='RMSE',
tuneLength = 100,
preProcess=c('scale', 'center'))
kaggle.model <- train(votos ~ poly(total_receita,2) + poly(total_despesa,2) + poly(quantidade_despesas,2) + poly(recursos_de_pessoas_juridicas,2) + poly(recursos_de_partidos,2),  data = df %>% select(-setor_economico_receita) %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_despesa),
method='lasso',
trControl = fitControl,
metric='RMSE',
tuneLength = 100,
preProcess=c('scale', 'center'))
kaggle.model
kaggle.model <- train(votos ~ poly(total_receita,2) + poly(total_despesa,2) + poly(quantidade_despesas,2) + poly(recursos_de_pessoas_juridicas,2) + poly(recursos_de_partidos,2),  data = df %>% select(-setor_economico_receita) %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_despesa),
method='lasso',
trControl = fitControl,
metric='RMSE',
tuneLength = lambda.grid,
preProcess=c('scale', 'center'))
kaggle.model <- train(votos ~ poly(total_receita,2) + poly(total_despesa,2) + poly(quantidade_despesas,2) + poly(recursos_de_pessoas_juridicas,2) + poly(recursos_de_partidos,2),  data = df %>% select(-setor_economico_receita) %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_despesa),
method='lasso',
trControl = fitControl,
metric='RMSE',
tuneLength = 50,
preProcess=c('scale', 'center'))
kaggle.model
lasso <- train(votos ~ ., data = df %>% select(-setor_economico_receita) %>% select(-cargo) %>% select(-nome) %>% select(-setor_economico_despesa),
method='lasso',
trControl = fitControl,
metric='RMSE',
tuneLength = 50,
preProcess=c('scale', 'center'))
lasso
testeKaggle <- read.csv("C:/Users/João Lucas/Desktop/teste.csv")
testeKaggle <- read_csv("C:/Users/João Lucas/Desktop/teste.csv")
testeKaggle <- read.csv("C:/Users/João Lucas/Desktop/teste.csv")
trainKaggle <- read.csv("C:/Users/João Lucas/Desktop/train.csv")
testeKaggle <- read.csv("C:/Users/João Lucas/Desktop/teste.csv")
testeKaggle <- read.csv("C:/Users/João Lucas/Desktop/test.csv")
View(testeKaggle)
View(trainKaggle)
View(trainKaggle)
testeKaggle <- read.csv("C:/Users/João Lucas/Desktop/test.csv")
trainKaggle <- read.csv("C:/Users/João Lucas/Desktop/train.csv")
redgeKaggle <- train(votos ~., trainKaggle %>% select(-nome),
method = "redge",
tuneGrid = lambda.grid,
metric = "RMSE",
preProcess = c('scale', 'center','nzv'))
testeKaggle <- read.csv("C:/Users/João Lucas/Desktop/test.csv")
trainKaggle <- read.csv("C:/Users/João Lucas/Desktop/train.csv")
redgeKaggle <- train(votos ~ ., trainKaggle %>% select(-nome),
method = "redge",
tuneGrid = lambda.grid,
metric = "RMSE",
preProcess = c('scale', 'center','nzv'))
testeKaggle <- read.csv("C:/Users/João Lucas/Desktop/test.csv")
trainKaggle <- read.csv("C:/Users/João Lucas/Desktop/train.csv")
redgeKaggle <- train(df$votos ~ ., trainKaggle %>% select(-nome),
method = "redge",
tuneGrid = lambda.grid,
metric = "RMSE",
preProcess = c('scale', 'center','nzv'))
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(leaps)
library(ggplot2)
library(plotly)
library(knitr)
library(caret)
library(elasticnet)
library(lars)
testeKaggle <- read.csv("C:/Users/João Lucas/Desktop/test.csv")
trainKaggle <- read.csv("C:/Users/João Lucas/Desktop/train.csv")
ridgeKaggle <- train(votos ~ ., trainKaggle %>% select(-nome) %>% select(-cargo),
method = 'ridge',
tuneGrid = lambda.grid,
metric = "RMSE",
na.action = na.pass,
preProcess = c('scale', 'center','nzv'))
View(testeKaggle)
colnames(testeKaggle)[13] <- "recursos_pessoas_fisicas"
View(testeKaggle)
testeKaggle <- read.csv("C:/Users/João Lucas/Desktop/test.csv")
colnames(testeKaggle)[13] <- "recursos_pessoas_fisicas"
media_partidos_testeKaggle <- mean(testeKaggle$recursos_de_partidos, na.rm = TRUE)
testeKaggle$recursos_de_partidos[is.na(testeKaggle$recursos_de_partidos)] <- media_partidos
media_comites_testeKaggle <- mean(testeKaggle$recursos_de_outros_candidatos.comites, na.rm = TRUE)
df$recursos_de_outros_candidatos.comites[is.na(df$recursos_de_outros_candidatos.comites)] <- media_comites
media_proprios_testeKaggle <- mean(testeKaggle$recursos_proprios, na.rm = TRUE)
testeKaggle$recursos_proprios[is.na(testeKaggle$recursos_proprios)] <- media_proprios
media_fisicas_testeKaggle <- mean(testeKaggle$recursos_pessoas_fisicas, na.rm = TRUE)
testeKaggle$recursos_pessoas_fisicas[is.na(testeKaggle$recursos_pessoas_fisicas)] <- media_fisicas
media_juridicas <- mean(testeKaggle$recursos_de_pessoas_juridicas, na.rm = TRUE)
testeKaggle$recursos_de_pessoas_juridicas[is.na(testeKaggle$recursos_de_pessoas_juridicas)] <- media_juridicas
View(testeKaggle)
testeKaggle <- read.csv("C:/Users/João Lucas/Desktop/test.csv")
colnames(testeKaggle)[13] <- "recursos_pessoas_fisicas"
media_partidos_testeKaggle <- mean(testeKaggle$recursos_de_partidos, na.rm = TRUE)
testeKaggle$recursos_de_partidos[is.na(testeKaggle$recursos_de_partidos)] <- media_partidos
media_comites_testeKaggle <- mean(testeKaggle$recursos_de_outros_candidatos.comites, na.rm = TRUE)
testeKaggle$recursos_de_outros_candidatos.comites[is.na(testeKaggle$recursos_de_outros_candidatos.comites)] <- media_comites
media_proprios_testeKaggle <- mean(testeKaggle$recursos_proprios, na.rm = TRUE)
testeKaggle$recursos_proprios[is.na(testeKaggle$recursos_proprios)] <- media_proprios
media_fisicas_testeKaggle <- mean(testeKaggle$recursos_pessoas_fisicas, na.rm = TRUE)
testeKaggle$recursos_pessoas_fisicas[is.na(testeKaggle$recursos_pessoas_fisicas)] <- media_fisicas
media_juridicas <- mean(testeKaggle$recursos_de_pessoas_juridicas, na.rm = TRUE)
testeKaggle$recursos_de_pessoas_juridicas[is.na(testeKaggle$recursos_de_pessoas_juridicas)] <- media_juridicas
View(testeKaggle)
trainKaggle <- read.csv("C:/Users/João Lucas/Desktop/train.csv")
colnames(trainKaggle)[13] <- "recursos_pessoas_fisicas"
media_partidos_testeKaggle <- mean(trainKaggle$recursos_de_partidos, na.rm = TRUE)
trainKaggle$recursos_de_partidos[is.na(trainKaggle$recursos_de_partidos)] <- media_partidos
media_comites_testeKaggle <- mean(trainKaggle$recursos_de_outros_candidatos.comites, na.rm = TRUE)
trainKaggle$recursos_de_outros_candidatos.comites[is.na(trainKaggle$recursos_de_outros_candidatos.comites)] <- media_comites
media_proprios_testeKaggle <- mean(trainKaggle$recursos_proprios, na.rm = TRUE)
trainKaggle$recursos_proprios[is.na(trainKaggle$recursos_proprios)] <- media_proprios
media_fisicas_testeKaggle <- mean(trainKaggle$recursos_pessoas_fisicas, na.rm = TRUE)
trainKaggle$recursos_pessoas_fisicas[is.na(trainKaggle$recursos_pessoas_fisicas)] <- media_fisicas
media_juridicas <- mean(trainKaggle$recursos_de_pessoas_juridicas, na.rm = TRUE)
trainKaggle$recursos_de_pessoas_juridicas[is.na(trainKaggle$recursos_de_pessoas_juridicas)] <- media_juridicas
View(trainKaggle)
ridgeKaggle <- train(votos ~ ., trainKaggle %>% select(-nome) %>% select(-cargo),
method = 'ridge',
tuneGrid = lambda.grid,
metric = "RMSE",
na.action = na.pass,
preProcess = c('scale', 'center','nzv'))
testeKaggle <- read.csv("C:/Users/João Lucas/Desktop/test.csv")
colnames(testeKaggle)[13] <- "recursos_pessoas_fisicas"
media_partidos_testeKaggle <- mean(testeKaggle$recursos_de_partidos, na.rm = TRUE)
testeKaggle$recursos_de_partidos[is.na(testeKaggle$recursos_de_partidos)] <- media_partidos
media_comites_testeKaggle <- mean(testeKaggle$recursos_de_outros_candidatos.comites, na.rm = TRUE)
testeKaggle$recursos_de_outros_candidatos.comites[is.na(testeKaggle$recursos_de_outros_candidatos.comites)] <- media_comites
media_proprios_testeKaggle <- mean(testeKaggle$recursos_proprios, na.rm = TRUE)
testeKaggle$recursos_proprios[is.na(testeKaggle$recursos_proprios)] <- media_proprios
media_fisicas_testeKaggle <- mean(testeKaggle$recursos_pessoas_fisicas, na.rm = TRUE)
testeKaggle$recursos_pessoas_fisicas[is.na(testeKaggle$recursos_pessoas_fisicas)] <- media_fisicas
media_juridicas <- mean(testeKaggle$recursos_de_pessoas_juridicas, na.rm = TRUE)
testeKaggle$recursos_de_pessoas_juridicas[is.na(testeKaggle$recursos_de_pessoas_juridicas)] <- media_juridicas
trainKaggle <- read.csv("C:/Users/João Lucas/Desktop/train.csv")
colnames(trainKaggle)[13] <- "recursos_pessoas_fisicas"
media_partidos_testeKaggle <- mean(trainKaggle$recursos_de_partidos, na.rm = TRUE)
trainKaggle$recursos_de_partidos[is.na(trainKaggle$recursos_de_partidos)] <- media_partidos
media_comites_testeKaggle <- mean(trainKaggle$recursos_de_outros_candidatos.comites, na.rm = TRUE)
trainKaggle$recursos_de_outros_candidatos.comites[is.na(trainKaggle$recursos_de_outros_candidatos.comites)] <- media_comites
media_proprios_testeKaggle <- mean(trainKaggle$recursos_proprios, na.rm = TRUE)
trainKaggle$recursos_proprios[is.na(trainKaggle$recursos_proprios)] <- media_proprios
media_fisicas_testeKaggle <- mean(trainKaggle$recursos_pessoas_fisicas, na.rm = TRUE)
trainKaggle$recursos_pessoas_fisicas[is.na(trainKaggle$recursos_pessoas_fisicas)] <- media_fisicas
media_juridicas <- mean(trainKaggle$recursos_de_pessoas_juridicas, na.rm = TRUE)
trainKaggle$recursos_de_pessoas_juridicas[is.na(trainKaggle$recursos_de_pessoas_juridicas)] <- media_juridicas
ridgeKaggle <- train(votos ~ ., trainKaggle %>% select(-nome) %>% select(-cargo),
method = 'ridge',
tuneGrid = lambda.grid,
metric = "RMSE",
na.action = na.pass,
preProcess = c('scale', 'center','nzv'))
ridgeKaggle <- train(votos ~ ., trainKaggle %>% select(-nome) %>% select(-cargo),
method = 'ridge',
tuneGrid = lambda.grid,
metric = "RMSE",
preProcess = c('scale', 'center','nzv'))
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(leaps)
library(ggplot2)
library(plotly)
library(knitr)
library(caret)
library(elasticnet)
library(lars)
df <- read.csv("C:/Users/João Lucas/Desktop/eleicoes2014.csv",fileEncoding = "latin1")
colnames(df)[13] <- "recursos_pessoas_fisicas"
testeKaggle <- read.csv("C:/Users/João Lucas/Desktop/test.csv")
colnames(testeKaggle)[13] <- "recursos_pessoas_fisicas"
media_partidos_testeKaggle <- mean(testeKaggle$recursos_de_partidos, na.rm = TRUE)
testeKaggle$recursos_de_partidos[is.na(testeKaggle$recursos_de_partidos)] <- media_partidos
media_comites_testeKaggle <- mean(testeKaggle$recursos_de_outros_candidatos.comites, na.rm = TRUE)
testeKaggle$recursos_de_outros_candidatos.comites[is.na(testeKaggle$recursos_de_outros_candidatos.comites)] <- media_comites
media_proprios_testeKaggle <- mean(testeKaggle$recursos_proprios, na.rm = TRUE)
testeKaggle$recursos_proprios[is.na(testeKaggle$recursos_proprios)] <- media_proprios
media_fisicas_testeKaggle <- mean(testeKaggle$recursos_pessoas_fisicas, na.rm = TRUE)
testeKaggle$recursos_pessoas_fisicas[is.na(testeKaggle$recursos_pessoas_fisicas)] <- media_fisicas
media_juridicas <- mean(testeKaggle$recursos_de_pessoas_juridicas, na.rm = TRUE)
testeKaggle$recursos_de_pessoas_juridicas[is.na(testeKaggle$recursos_de_pessoas_juridicas)] <- media_juridicas
trainKaggle <- read.csv("C:/Users/João Lucas/Desktop/train.csv")
colnames(trainKaggle)[13] <- "recursos_pessoas_fisicas"
media_partidos_testeKaggle <- mean(trainKaggle$recursos_de_partidos, na.rm = TRUE)
trainKaggle$recursos_de_partidos[is.na(trainKaggle$recursos_de_partidos)] <- media_partidos
media_comites_testeKaggle <- mean(trainKaggle$recursos_de_outros_candidatos.comites, na.rm = TRUE)
trainKaggle$recursos_de_outros_candidatos.comites[is.na(trainKaggle$recursos_de_outros_candidatos.comites)] <- media_comites
media_proprios_testeKaggle <- mean(trainKaggle$recursos_proprios, na.rm = TRUE)
trainKaggle$recursos_proprios[is.na(trainKaggle$recursos_proprios)] <- media_proprios
media_fisicas_testeKaggle <- mean(trainKaggle$recursos_pessoas_fisicas, na.rm = TRUE)
trainKaggle$recursos_pessoas_fisicas[is.na(trainKaggle$recursos_pessoas_fisicas)] <- media_fisicas
media_juridicas <- mean(trainKaggle$recursos_de_pessoas_juridicas, na.rm = TRUE)
trainKaggle$recursos_de_pessoas_juridicas[is.na(trainKaggle$recursos_de_pessoas_juridicas)] <- media_juridicas
ridgeKaggle <- train(votos ~ ., trainKaggle %>% select(-nome) %>% select(-cargo),
method = 'ridge',
tuneGrid = lambda.grid,
metric = "RMSE",
preProcess = c('scale', 'center','nzv'))
ridgeKaggle
ridge_kaggle_predict <- predict(redgeKaggle,testeKaggle %>% select(-nome) %>% select(-votos))
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-votos))
View(testeKaggle)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
View(testeKaggle)
View(testeKaggle)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo) %>% select(-setor_economico_receita))
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo) %>% select(-testeKaggle$setor_economico_despesa))
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
View(trainKaggle)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo) %>% select(-setor_economico_receita))
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo) %>% select(-testeKaggle$setor_economico_receita))
View(testeKaggle)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo) %>% select(-testeKaggle$setor_economico_despesa) %>% select(-testeKaggle$setor_economico_receita))
View(testeKaggle)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo) %>% select(-testeKaggle$setor_economico_despesa) %>% select(-testeKaggle$setor_economico_receita))
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo) %>% select(-setor_economico_despesa) %>% select(-testeKaggle$setor_economico_receita))
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo) %>% select(-setor_economico_despesa) %>% select(-setor_economico_receita))
View(testeKaggle)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo) %>% select(-setor_economico_despesa))
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
testeKaggle <-testeKaggle[-,c(6,20)]
testeKaggle <-testeKaggle[-,c(6,20)]
testeKaggle <-testeKaggle[,-c(6,20)]
View(testeKaggle)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
View(trainKaggle)
trainKaggle <-trainKaggle[,-c(6,21)]
ridgeKaggle <- train(votos ~ ., trainKaggle %>% select(-nome) %>% select(-cargo),
method = 'ridge',
tuneGrid = lambda.grid,
metric = "RMSE",
preProcess = c('scale', 'center','nzv'))
ridgeKaggle
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = ridge_kaggle_predict, obs = df$votos)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = testeKaggle$nome, obs = ridge_kaggle_predict)
ridge_show_kaggle_predict <- round(defaultSummary(ridge.data_kaggle_predict),digits = 4)
ridge_show_kaggle_predict
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = testeKaggle$ID, obs = ridge_kaggle_predict)
ridge_show_kaggle_predict <- round(defaultSummary(ridge.data_kaggle_predict),digits = 4)
ridge_show_kaggle_predict
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = testeKaggle$numero_cadidato, obs = ridge_kaggle_predict)
ridge_show_kaggle_predict <- round(defaultSummary(ridge.data_kaggle_predict),digits = 4)
ridge_show_kaggle_predict
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(id = testeKaggle$ID,votos = ridge_kaggle_predict)
ridge_show_kaggle_predict <- round(defaultSummary(ridge.data_kaggle_predict),digits = 4)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = testeKaggle$numero_cadidato, obs = ridge_kaggle_predict)
ridge_show_kaggle_predict <- round(defaultSummary(ridge.data_kaggle_predict),digits = 4)
ridge_show_kaggle_predict
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = testeKaggle$nome, obs = ridge_kaggle_predict)
ridge_show_kaggle_predict <- round(defaultSummary(ridge.data_kaggle_predict),digits = 4)
ridge_show_kaggle_predict
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = testeKaggle$nome, obs = ridge_kaggle_predict)
ridge_show_kaggle_predict <- round(defaultSummary(ridge.data_kaggle_predict),digits = 4)
ridge_show_kaggle_predict
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = testeKaggle$ID, obs = ridge_kaggle_predict)
ridge_show_kaggle_predict <- round(defaultSummary(ridge.data_kaggle_predict),digits = 4)
ridge_show_kaggle_predict
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = testeKaggle$numero_cadidato, obs = ridge_kaggle_predict)
ridge_show_kaggle_predict <- round(defaultSummary(ridge.data_kaggle_predict),digits = 4)
ridge_show_kaggle_predict
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = testeKaggle$numero_cadidato, obs = ridge_kaggle_predict)
ridge.data_kaggle_predict
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = testeKaggle$numero_cadidato, obs = ridge_kaggle_predict)
summarise(ridge.data_kaggle_predict)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = testeKaggle$numero_cadidato, obs = ridge_kaggle_predict)
summarise(ridge.data_kaggle_predict)
summarise
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = testeKaggle$numero_cadidato, obs = ridge_kaggle_predict)
ridge_show_kaggle_predict <- round(defaultSummary(ridge.data_kaggle_predict),digits = 4)
ridge_show_kaggle_predict
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge_data_kaggle_predict <- data.frame(idCandidato = testeKaggle$ID,votos = ridgeKaggle)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge_data_kaggle_predict <- data.frame(idCandidato = testeKaggle$ID ,votos = ridgeKaggle)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge_data_kaggle_predict <- data.frame(idCandidato = testeKaggle$ID ,votos = ridgeKaggle)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge_data_kaggle_predict <- data.frame(pred = ridge_kaggle_predict,obs = trainKaggle$votos)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge_data_kaggle_predict <- data.frame(idCandidato = testeKaggle$ID,votos = ridgeKaggle)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = testeKaggle$ID, obs = ridge_kaggle_predict)
ridge_show_kaggle_predict <- round(defaultSummary(ridge.data_kaggle_predict),digits = 4)
ridge_show_kaggle_predict
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = testeKaggle$nome, obs = ridge_kaggle_predict)
ridge_show_kaggle_predict <- round(defaultSummary(ridge.data_kaggle_predict),digits = 4)
ridge_show_kaggle_predict
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = testeKaggle$numero_cadidato, obs = ridge_kaggle_predict)
ridge_show_kaggle_predict <- round(defaultSummary(ridge.data_kaggle_predict),digits = 4)
ridge_show_kaggle_predict
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = ridge_kaggle_predict, obs = trainKaggle$votos)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = testeKaggle$numero_cadidato, obs = ridge_kaggle_predict)
ridge_show_kaggle_predict <- round(defaultSummary(ridge.data_kaggle_predict),digits = 4)
ridge_show_kaggle_predict
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge_kaggle_predict
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
ridge.data_kaggle_predict <- data.frame(pred = ridge_kaggle_predict, obs = trainKaggle$votos)
install.packages('reshape2')
install.packages("reshape2")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(leaps)
library(ggplot2)
library(plotly)
library(knitr)
library(caret)
library(caret)
library(readr)
library(leaps)
library(ggplot2)
library(plotly)
library(knitr)
library(caret)
install.packages("caret")
library(readr)
library(leaps)
library(ggplot2)
library(plotly)
library(knitr)
library(caret)
library(elasticnet)
library(lars)
library(readr)
library(leaps)
library(ggplot2)
library(plotly)
library(knitr)
library(caret)
library(elasticnet)
library(lars)
library(reshape2)
library(readr)
library(leaps)
library(ggplot2)
library(plotly)
library(knitr)
library(caret)
library(elasticnet)
library(lars)
library(reshape2)
ridge_kaggle_predict <- predict(ridgeKaggle,testeKaggle %>% select(-nome) %>% select(-cargo))
